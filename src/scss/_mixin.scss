@use 'variables' as *;
@use "sass:math";
@use "sass:list";
@use "sass:map";

// typography
@mixin font($weight: $font-weight-regular,
  $size: $font-size-body-medium,
  $line-height: normal,
  $family: $font-typo-main-font,
  $letter-spacing: $letter-spacing-0) {
  font: #{$weight} #{$size}/#{$line-height} #{$family};
  letter-spacing: $letter-spacing;
}

// Typography
@mixin build-font($weight, $size, $lineHeight, $family: $font-typo-main-font) {
  font: #{$weight} #{$size}/#{$lineHeight} #{$family};
  letter-spacing: $letter-spacing-0;
}

// navigation
@mixin title-small-regular {
  @include build-font($font-weight-regular, $font-size-navigation-XS, normal);
}

@mixin title-medium {
  @include build-font($font-weight-medium, $font-size-navigation-M, normal);
}

@mixin title-semibold {
  @include build-font($font-weight-semibold, $font-size-navigation-L, normal);
}

// Depth
@mixin depth-xsmall-semibold {
  @include build-font($font-weight-semibold, $font-size-navigation-XS, normal);
}

@mixin depth-small-medium {
  @include build-font($font-weight-medium, $font-size-navigation-S, normal);
}

@mixin depth-medium {
  @include build-font($font-weight-regular, $font-size-navigation-M, normal);
}

@mixin depth-medium-bold {
  @include build-font($font-weight-semibold, $font-size-navigation-M, normal);
}

// body
@mixin font-body-xxsmall {
  @include build-font($font-weight-medium, $font-size-body-xxsmall, 1.9rem);
}

@mixin font-body-xsmall {
  @include build-font($font-weight-regular, $font-size-body-xsmall, 2rem);
}

@mixin font-body-small {
  @include build-font($font-weight-regular, $font-size-body-small, 2.2rem);
}

@mixin font-body-medium {
  @include build-font($font-weight-regular, $font-size-body-medium, 2.4rem);
}

@mixin font-body-large {
  @include build-font($font-weight-regular, $font-size-body-large, 2.7rem);
}

@mixin font-body-xxsmall-bold {
  @include build-font($font-weight-semibold, $font-size-body-xxsmall, 1.9rem);
}

@mixin font-body-xsmall-bold {
  @include build-font($font-weight-semibold, $font-size-body-xsmall, 2rem);
}

@mixin font-body-small-bold {
  @include build-font($font-weight-semibold, $font-size-body-small, 2.2rem);
}

@mixin font-body-medium-bold {
  @include build-font($font-weight-semibold, $font-size-body-medium, 2.4rem);
}

@mixin font-body-large-bold {
  @include build-font($font-weight-bold, $font-size-body-large, 2.7rem);
}

// heading
@mixin font-heading-xlarge-bold {
  @include build-font($font-weight-bold, $font-size-heading-xlarge, normal);
}

@mixin font-heading-large-bold {
  @include build-font($font-weight-bold, $font-size-heading-large, normal);
}

@mixin font-heading-medium-bold {
  @include build-font($font-weight-bold, $font-size-heading-medium, normal);
}

@mixin font-heading-small-bold {
  @include build-font($font-weight-bold, $font-size-heading-small, normal);
}

@mixin font-heading-xsmall-bold {
  @include build-font($font-weight-bold, $font-size-heading-xsmall, normal);
}

@mixin ellipsis {
  text-overflow: ellipsis;
  overflow: hidden;
  word-break: break-word;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  // -webkit-line-clamp: 원하는 라인 수; 추가해서 사용
}

// desc-guide text
@mixin desc-guide {
  display: inline-flex;
  align-items: center;
  padding: 1px 4px;
  border-radius: 2px;
  background: $color-border-gray-light;
  @include font($weight: $font-weight-medium, $size: $font-size-body-xxsmall, $line-height: 1.2rem);
  color: $color-text-subcolor;
}

@mixin desc-box {
  display: flex;
  flex-direction: column;
  flex: 1;
  margin-top: 16px;
  text-align: center;
  @include font-body-small;
  color: $color-text-basic;

  &:first-of-type {
    margin-top: 0;
  }

  &+.desc-box {
    margin-top: 12px;
  }

  +.table-list {
    margin-top: 24px;
  }
}

// button
@mixin icon-size($width, $height, $only-child-margin: 0) {
  display: inline-block;
  width: $width;
  height: $height;
  font-size: 0;

  &:only-child {
    margin: $only-child-margin;
  }

  +span {
    margin-left: 2px;
    padding-right: 8px;
  }
}

@mixin button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0 7px;
  box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);
  border-radius: 4px;
  border-width: 1px;
  border-style: solid;
  text-align: center;
  vertical-align: middle;
  box-sizing: border-box;

  &.--medium,
  &.--large {
    i {

      &.plus:before,
      &.plus:after {
        height: 15px;
      }
    }
  }

  i {
    position: relative;
    @include icon-size(16px, 16px);

    &.plus {
      @include line-icon(plus, 10px);
    }

    &:not(.plus):before {
      content: '';
      display: inline-block;
      width: 100%;
      height: 100%;
    }

    &.check {
      position: relative;
      @include sprite-icons(58, 18px, after);

      &::after {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      &::before {
        content: "";
        display: inline-block;
        width: 16px;
        height: 16px;
        margin: 0 4px 0 0;
        border-radius: 50%;
        border: 1px solid $color-border-inverse;
        vertical-align: -2px;
        border-radius: 50%;
      }
    }
  }

  span {
    display: inline-block;

    &:only-child {
      padding: 0 8px;
    }
  }

  // 사이즈
  &.--xsmall {
    height: 32px;
    @include font-body-xsmall;

    i {
      @include icon-size(16px, 16px);
    }

    &.--round {
      border-radius: 16px;
    }
  }

  &.--small {
    height: 40px;
    @include font-body-xsmall;

    i {
      @include icon-size(16px, 16px, 4px);
    }
  }

  &.--medium {
    height: 48px;
    @include font-body-small;

    i {
      @include icon-size(24px, 24px, 4px);
    }

    i:only-child {
      @include icon-size(32px, 32px, 0);
    }
  }

  &.--large {
    height: 56px;
    @include font-body-small;

    i {
      @include icon-size(24px, 24px, 8px);
    }
  }

  &:focus,
  &:focus-visible {
    outline: none;
    box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05),
      0px 0px 0px 4px $color-border-primary-light;
  }
}

// disabled
@mixin button-disabled {

  &.--disabled,
  &.--disabled:hover,
  &:disabled,
  &:disabled:hover {
    border: 1px solid $Line-line;
    color: $color-divider-gray;
    background: $color-border-gray-light;
    box-shadow: none;

    i {

      &::before,
      &::after {
        background: $color-border-gray;
      }
    }
  }
}

@mixin modal {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 100vw;
  height: 100vh;
  transform: translate(-50%, -50%);
  z-index: 12;
  background: rgba(0, 0, 0, .5);

  // &::before {
  //   content: '';
  //   position: fixed;
  //   top: 0;
  //   left: 0;
  //   display: block;
  //   width: 100%;
  //   height: 100%;
  //   background: $color-alpha-inverse50;
  // }

  .modal-wrap {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 8px;
    border: 1px solid $color-border-gray;
    background: $color-background-white;

    .btn-wrap.close {
      position: absolute;
      top: 16px;
      right: 20px;
    }
  }

  &.--xlarge {
    .modal-wrap {
      width: 100%;
      max-width: 940px;
    }
  }

  &.--large {
    .modal-wrap {
      width: 100%;
      max-width: 540px;
    }
  }

  &.--normal {
    .modal-wrap {
      width: 100%;
      max-width: 480px;
    }
  }

  &.--small {
    .modal-wrap {
      width: 100%;
      max-width: 400px;
    }
  }
}

// -----------------------------------------------------------------------------
// @param $type : next, prev, up, down, cross, plus, minus
// @param $size : arrow 높이(next/prev), caret 폭(up/down), 선 길이(plus/cross/minus)
// -----------------------------------------------------------------------------
@mixin line-icon($type, $size: 5px) {

  &::before,
  &::after {
    content: '';
    display: inline-block;
    position: absolute;
    border-radius: 1px;
    background: if($type ==plus or $type ==minus, $color-border-inverse, $color-border-gray-dark);
    transform-origin: center;
    z-index: 1;
  }

  @if $type ==next or $type ==prev {

    &::before,
    &::after {
      width: 1px;
      height: $size;
      #{if($type == next, right, left)}: 5.5px;
    }

    &::before {
      top: calc(50% - 1.8px);
      transform: translateY(-50%) rotate(if($type ==next, -45deg, 45deg));
    }

    &::after {
      top: calc(50% + 1.8px);
      transform: translateY(-50%) rotate(if($type ==next, 45deg, -45deg));
    }
  }

  @else if $type ==up or $type ==down {

    &::before,
    &::after {
      width: $size;
      height: 1px;
      top: 50%;
    }

    @if $type ==up {

      &::before {
        left: calc(50% - 1.9px);
        transform: translate(-50%, -50%) rotate(-45deg);
      }

      &::after {
        left: calc(50% + 1.9px);
        transform: translate(-50%, -50%) rotate(45deg);
      }
    }

    @else {

      &::before {
        left: calc(50% - 1.9px);
        transform: translate(-50%, -50%) rotate(45deg);
      }

      &::after {
        left: calc(50% + 1.9px);
        transform: translate(-50%, -50%) rotate(-45deg);
      }
    }
  }

  @else if $type ==cross {

    &::before,
    &::after {
      width: 1px;
      height: $size;
      top: 50%;
      left: 50%;
    }

    &::before {
      transform: translate(-50%, -50%) rotate(45deg);
    }

    &::after {
      transform: translate(-50%, -50%) rotate(-45deg);
    }
  }

  @else if $type ==plus {

    &::before,
    &::after {
      width: 1px;
      height: $size;
      top: 50%;
      left: 50%;
    }

    &::before {
      transform: translate(-50%, -50%) rotate(0deg);
    }

    &::after {
      transform: translate(-50%, -50%) rotate(90deg);
    }
  }

  @else if $type ==minus {

    &::before {
      width: $size;
      height: 1px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    &::after {
      display: none;
    }
  }
}

@mixin tooltip {
  display: none;
  position: absolute;
  left: 50%;
  min-height: 24px;
  padding: 3px 8px !important;
  white-space: nowrap;
  @include font-body-xxsmall;
  color: $color-text-basic-inverse;
  border-radius: 4px;
  background: $color-border-gray-darker;
  transform: translateX(-50%);

  &::before {
    content: '';
    position: absolute;
    top: -2.5px;
    left: 50%;
    width: 10px;
    height: 10px;
    background: $color-border-gray-darker;
    border-radius: 2px 0 0 0;
    transform: translateX(-50%) rotate(45deg);
    clip-path: polygon(0 0, 0% 100%, 100% 0);
  }
}

@mixin alert {
  display: flex;
  gap: 0 8px;
  padding: 16px;
  border-radius: 12px;
  @include font-body-small;
  position: relative;

  &::before {
    position: absolute;
    top: 15px;
    left: 16px;
  }

  dl {
    padding-left: calc(24px + 8px);
  }

  .title {
    margin: 0 0 8px;
    font-weight: 600;
  }
}

@mixin rating-size($h) {
  width: $h * 5;
  height: $h;

  &.input label {
    width: $h;
    height: $h;
  }
}

// sprite-icons
$sprite-path: '../img/icon/icon-sprite.png';
$sprite-cols: 10; // 한 줄에 아이콘 갯수
$sprite-orig: 64px; // 원본 아이콘 크기

// 사용할 아이콘 이름 리스트(순서대로 1부터 시작)
$icons: (
  arrow-up,
  arrow-down,
  arrow-left,
  arrow-right,
  arrow-line-up-white,
  arrow-line-down-white,
  arrow-line-left-white,
  arrow-line-right-white,
  arrow-line-top,
  arrow-line-top-hover,
  arrow-line-top-active,
  arrow-triangle-up,
  arrow-triangle-down,
  arrow-triangle-left,
  arrow-triangle-right,
  menu,
  shopping-cart,
  edit,
  edit-opacity,
  parcelservice-opacity,
  gift-opacity,
  message-circle,
  message-circle-white,
  message-square,
  message-square-yellow,
  book-open,
  book-close,
  folder,
  folder-plus,
  folder-minus,
  file,
  file-minus,
  file-plus,
  file-text,
  face-smile,
  face-meh,
  face-frown,
  inform-info,
  inform-alert-circle,
  inform-alert-white,
  inform-alert-triangle,
  inform-help-circle,
  phone-call-white,
  phone-call,
  parcelservice-white,
  map,
  download,
  upload,
  download-cloud,
  upload-cloud,
  link,
  link-2,
  external-link,
  unlock,
  lock,
  clip,
  check,
  check-white,
  checkbox,
  checkbox-disabled,
  eye-on,
  eye-off,
  share,
  share-hover,
  share-active,
  mail,
  bell,
  check-circle,
  bookmark,
  brifcase,
  clock,
  credit-card,
  calendar,
  ellipsis,
  face-smile-yellow,
  new,
  status-best,
  status-recommend,
  status-discount-01,
  status-discount-02,
  status-new,
  status-discount-11,
  status-discount-12,
  status-contact,
  system-danger,
  system-info,
  system-success,
  system-warning,
  sns-naver,
  sns-kakao,
  sns-google,
  arrow-line-up,
  arrow-line-down
);

// index 기반 믹스인: $idx(1~), $size(출력크기), $pseudo(::before|::after)
@mixin sprite-icons($idx, $size, $pseudo: before) {
  $sprite-width: $sprite-cols * $size;

  $col: (
    $idx - 1) % $sprite-cols;
  $row: math.floor(math.div($idx - 1, $sprite-cols )
  );

$offset-x: - $col * $size;
$offset-y: - $row * $size;

&::#{$pseudo} {
  content: '';
  display: inline-block;
  vertical-align: middle;
  width: $size;
  height: $size;
  background-image: url(#{$sprite-path});
  background-repeat: no-repeat;
  background-size: $sprite-width auto;
  background-position: $offset-x $offset-y;
}
}

// $size만 지정
@mixin sprite-icons-size($size, $cols: $sprite-cols, $orig: $sprite-orig) {
  $scale: math.div($size, $orig);

  display: inline-block;
  line-height: 0;

  &::before {
    content: '';
    display: inline-block;
    width: $size;
    height: $size;
    background-image: url(#{$sprite-path});
    background-repeat: no-repeat;
    background-size: ($cols * $orig * $scale) auto;
  }

  $total: list.length($icons);

  @for $i from 1 through $total {
    $colIndex: (
      $i - 1) % $cols;
    $rowIndex: math.floor(math.div($i - 1, $cols)
    );
  $posX: -$colIndex * $orig * $scale;
  $posY: -$rowIndex * $orig * $scale;

  &.icon-#{$i}::before {
    background-position: $posX $posY;
  }
}
}

// svg-icons
@function svgIcon($iconName, $color-text-basic: #4c4c4c, $color-border-primary: #ed6190) {
  $iconList: (
    user: "%3Csvg xmlns='http://www.w3.org/2000/svg' width='36' height='36' fill='none'%3E%3Cpath stroke='%23#{$color-text-basic}' stroke-linecap='round' stroke-linejoin='round' d='M26 27v-2a4 4 0 0 0-4-4h-8a4 4 0 0 0-4 4v2M18 17a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z'/%3E%3Cpath stroke='%23#{$color-border-primary}' d='M25 8.5h5M27.5 6v5'/%3E%3C/svg%3E",
    search: "%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none'%3E%3Cpath d='M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z' stroke='%23#{$color-text-basic}' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M20.9999 21.0004L16.6499 16.6504' stroke='%23#{$color-text-basic}' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E",
    cart: "%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='22' fill='none'%3E%3Cpath stroke='%23#{$color-text-basic}' stroke-linecap='round' stroke-linejoin='round' d='M9 21.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM20 21.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM1 .5h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 5.5H6'/%3E%3C/svg%3E"
  );
$icon: map.get($iconList, $iconName);
@return url("data:image/svg+xml;charset=utf8,#{$icon}");
}